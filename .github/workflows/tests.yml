name: Test builds

# Útil quando debugando.
on:
  push:

#on:
#  pull_request:
#    branchs:
#      - 'feature/**'
#      - 'hotfix/**'
#      - 'release/**'


env:
  REGISTRY_USER: imobanco
  IMAGE_REGISTRY: quay.io
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0
#    - name: Build Image
#      id: build-image
#      uses: redhat-actions/buildah-build@v2
#      with:
#        image: ${{ github.repository }}/python
#        tags: dev-latest
#        dockerfiles: |
#          ./Containerfile.dev

    - uses: cachix/install-nix-action@v13
      with:
        install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes ca-references ca-derivations
          sandbox = false
    - run: nix flake --version
    - run: nix flake metadata nixpkgs
    - run: nix profile install github:ES-Nix/podman-rootless/from-nixpkgs
    - run: podman --version && podman info

    - name: Faz build da imagem de dev usando podman via nix
      run: make dev.build

# Útil quando debugando.
    - name: Exibe metadados do podman
      run: podman info

    - name: Lista images
      run: podman images

    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
    # in which case 'username' and 'password' can be omitted.
    - name: Push to
      id: push-to
      uses: redhat-actions/push-to-registry@v2
      with:
        image: localhost/imobanco/python:dev-latest
        registry: docker.pkg.github.com
        tags: ${{ steps.build-image.outputs.tags }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

#  build-prod:
#    runs-on: ubuntu-18.04
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Build prod
#        run: make prod.build
