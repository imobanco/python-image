name: Faz push das imagens


on:
  push:
    branchs:
      - master

jobs:
  push:
    name: Build & Push
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0

    - uses: cachix/install-nix-action@v17
      with:
        install_url: https://releases.nixos.org/nix/nix-2.9.2/install
        install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
        extra_nix_config: |
          experimental-features = nix-command flakes ca-references ca-derivations
          sandbox = false
    - run: nix flake --version
#    - run: nix flake metadata nixpkgs

    # Remove podman via apt-get
    - run: |
        sudo apt-get purge -y podman containers-image containers-common
        sudo apt-get autoremove --purge
        sudo apt-get -y clean
        podman --version || echo podman not installed

    # Instala podman usando nix
    - run: nix profile install github:ES-Nix/podman-rootless/136a0ad03df69baa0a810282591f4c962d1c626f
    # Não funciona pois não vem com os arquivos de configuração
#    - run: nix profile install nixpkgs#podman
    - run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends --no-install-suggests -y uidmap
    - run: podman --version
#    - run: podman info --debug

    - name: Faz build da imagem de dev usando podman via nix
      run: |
        make build
        echo "::set-output name=REGISTRY::$(make print-GITHUB_REGISTRY)"
        echo "::set-output name=IMAGE_NAME::$(make print-IMAGE_NAME)"
        echo "::set-output name=IMAGE_TAG_DEV::$(make print-IMAGE_TAG_DEV)"
      shell: bash
      id: dev-build

    - name: Faz build da imagem de prod usando podman via nix
      run: |
        make build.prod
        echo "::set-output name=REGISTRY::$(make print-GITHUB_REGISTRY)"
        echo "::set-output name=IMAGE_NAME::$(make print-IMAGE_NAME)"
        echo "::set-output name=IMAGE_TAG_PROD::$(make print-IMAGE_TAG_PROD)"
      shell: bash
      id: prod-build

    - name: Log in em Quay.io para push
      uses: redhat-actions/podman-login@v1.4
      with:
          registry: ${{ steps.dev-build.outputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
    # in which case 'username' and 'password' can be omitted.
    - name: Faz push para registry da imagem de dev
      id: push-to
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.dev-build.outputs.IMAGE_NAME }}
        registry: ${{ steps.dev-build.outputs.REGISTRY }}
        tags: ${{ steps.dev-build.outputs.IMAGE_TAG_DEV }}
    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Faz push para registry da imagem de prod
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.prod-build.outputs.IMAGE_NAME }}
        registry: ${{ steps.prod-build.outputs.REGISTRY }}
        tags: ${{ steps.prod-build.outputs.IMAGE_TAG_PROD }}
    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Lista imagens
      run: podman images
