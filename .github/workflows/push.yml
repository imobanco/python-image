name: Faz push das imagens


on:
  push:
    branchs:
      - master

jobs:
  push:
    name: Build & Push
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0

    - name: Instala nix single user
      run: |
        test -d /nix || sudo mkdir -m 0755 /nix \
        && sudo -k chown "$USER": /nix \
        && BASE_URL='https://raw.githubusercontent.com/ES-Nix/get-nix/' \
        && SHA256=5443257f9e3ac31c5f0da60332d7c5bebfab1cdf \
        && NIX_RELEASE_VERSION='2.10.2' \
        && curl -fsSL "${BASE_URL}""$SHA256"/get-nix.sh | sh -s -- ${NIX_RELEASE_VERSION} \
        && . "$HOME"/.nix-profile/etc/profile.d/nix.sh \
        && . ~/."$(ps -ocomm= -q $$)"rc \
        && export TMPDIR=/tmp \
        && nix flake --version
        echo "$HOME"/.nix-profile/bin >> $GITHUB_PATH

    # Remove podman via apt-get
    - run: |
        sudo apt-get purge -y podman containers-image containers-common
        sudo apt-get autoremove --purge
        sudo apt-get -y clean
        podman --version || echo podman not installed

    # Instala podman usando nix
    # nix profile install nixpkgs#podman
    # Não funciona pois não vem com os arquivos de configuração + permissões no new?idmap
    - run: |
        nix profile install github:ES-Nix/podman-rootless/83ff27be5616e3029c2aec2de595f86da081e857#podman
        podman --version

    - name: Faz build da imagem de dev usando podman via nix
      run: |
        make build
        echo "::set-output name=REGISTRY::$(make print-GITHUB_REGISTRY)"
        echo "::set-output name=IMAGE_NAME::$(make print-IMAGE_NAME)"
        echo "::set-output name=IMAGE_TAG_DEV::$(make print-IMAGE_TAG_DEV)"
      shell: bash
      id: dev-build

    - name: Faz build da imagem de prod usando podman via nix
      run: |
        make build.prod
        echo "::set-output name=REGISTRY::$(make print-GITHUB_REGISTRY)"
        echo "::set-output name=IMAGE_NAME::$(make print-IMAGE_NAME)"
        echo "::set-output name=IMAGE_TAG_PROD::$(make print-IMAGE_TAG_PROD)"
      shell: bash
      id: prod-build

    - name: Log in em Quay.io para push
      uses: redhat-actions/podman-login@v1.4
      with:
          registry: ${{ steps.dev-build.outputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
    # in which case 'username' and 'password' can be omitted.
    - name: Faz push para registry da imagem de dev
      id: push-to
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.dev-build.outputs.IMAGE_NAME }}
        registry: ${{ steps.dev-build.outputs.REGISTRY }}
        tags: ${{ steps.dev-build.outputs.IMAGE_TAG_DEV }}
    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Faz push para registry da imagem de prod
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.prod-build.outputs.IMAGE_NAME }}
        registry: ${{ steps.prod-build.outputs.REGISTRY }}
        tags: ${{ steps.prod-build.outputs.IMAGE_TAG_PROD }}
    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

    - name: Lista imagens
      run: podman images
